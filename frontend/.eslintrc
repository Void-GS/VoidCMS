{
    "globals": {
      "NodeJS": true,
      "$fetch": true
    },
    "plugins": [
      "prettier"
    ],
    "extends": [
      "@nuxtjs/eslint-config-typescript",
      "plugin:import/typescript",
      "plugin:prettier/recommended"
    ],
    "rules": {
      "comma-dangle": ["error", "never"],
      "sort-imports": [
        "error",
        {
          "ignoreDeclarationSort": true
        }
      ],
      "unicorn/prefer-node-protocol": "error",
      "no-console": "warn",
      "vue/multi-word-component-names": "off",
      "vue/one-component-per-file": "off",
      "vue/require-default-prop": "off",
      "vue/no-multiple-template-root": "off",
      "import/order": [
        "error",
        {
          "pathGroups": [
            {
              "pattern": "@nuxt/test-utils/experimental",
              "group": "external"
            },
            {
              "pattern": "@nuxt/test-utils",
              "group": "external"
            },
            {
              "pattern": "#vue-router",
              "group": "external"
            }
          ]
        }
      ],
      "import/no-restricted-paths": [
        "error",
        {
          "zones": [
            {
              "from": "packages/nuxt/src/!(core)/**/*",
              "target": "packages/nuxt/src/core",
              "message": "core should not directly import from modules."
            },
            {
              "from": "packages/nuxt/src/!(app)/**/*",
              "target": "packages/nuxt/src/app",
              "message": "app should not directly import from modules."
            },
            {
              "from": "packages/nitro",
              "target": "packages/!(nitro)/**/*",
              "message": "nitro should not directly import other packages."
            }
          ]
        }
      ],
      "@typescript-eslint/consistent-type-imports": [
        "error",
        {
          "disallowTypeAnnotations": false
        }
      ],
      "@typescript-eslint/ban-ts-comment": [
        "error",
        {
          "ts-expect-error": "allow-with-description",
          "ts-ignore": true
        }
      ],
      "@typescript-eslint/prefer-ts-expect-error": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "ignoreRestSiblings": true
        }
      ]
    }
  }
  